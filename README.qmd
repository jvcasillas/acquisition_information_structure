---
format: gfm
execute: 
  echo: false
  message: false
  warning: false
  fig-dpi: 300
  fig-asp: 0.56
---

```{r}
#| label: setup
#| include: false
library("here")
library("rscopus")
library("tidyr")
library("dplyr")
library("readr")
library("glue")
library("stringr")
library("ggplot2")
library("forcats")
```


```{r}
#| label: scopus-query
#| eval: false
#
# Getting publication data via scopus
#
# set year thresholds
min_year <- 1960
max_year <- 2025

# prep empty output    
out_df <- NULL

# search by year (broken down by year because of 5k limit on records)
for(i in min_year:max_year){
  
  res <- scopus_search(
    query = paste(
      "TITLE-ABS-KEY({information structure} OR {information packaging} OR topic OR 
           focus OR {information focus} OR {contrastive focus} OR 
           {new information} OR {old information} OR given OR givenness OR 
           {discourse anaphor} OR contrastiveness OR presupposition ) AND 
       EXACTSRCTITLE({Discourse Processes} OR {Journal of Pragmatics} OR 
           {Psychological Science} OR {Journal of Phonetics} OR 
           {Journal of Experimental Linguistics} OR 
           {Applied Psycholinguistics} OR {Second Language Research} OR 
           {Studies in Second Language Acquisition} OR 
           {Bilingualism: Language and Cognition} OR 
           {The Quarterly Journal of Experimental Psychology} OR 
           {Cognition} OR {Journal of Memory and Language} OR 
           {Journal of Experimental Psychology} OR 
           {Learning, Memory, and Cognition} OR 
           {Language, Cognition, and Neuroscience} OR 
           {Behavioral and Brain Science} OR {Glossa} OR 
           {Glossa Psycholinguistics}) AND
       PUBYEAR = ", i, "AND 
       SRCTYPE(j)"
    ),
    count = 25,
    max_count = 5000
  )

  n_records <- res$total_results
  
  if (n_records > 5000) {
    stop("Joseph, add a while() loop")
  }

  out_df <- bind_rows(out_df, gen_entries_to_df(res$entries)$df)
  
}

out_df |> 
  write_csv(here("data", "raw", glue("{Sys.Date()}_scopus_out.csv")))

```


```{r}
#| label: tidy-data
#| eval: false

src_is <- read_csv(here("data", "raw", "2025-02-28_scopus_out.csv")) |>
  select(
    title =  'dc:title',
    author = 'dc:creator',
    journal = 'prism:publicationName',
    issn = 'prism:issn',
    volume = 'prism:volume',
    pages = 'prism:pageRange',
    date = 'prism:coverDate',
    display_date = 'prism:coverDisplayDate',
    doi = 'prism:doi',
    citations = 'citedby-count',
  ) |>
  mutate(
    year = lubridate::year(date), 
    journal = str_replace(journal, "&amp;", "&")
  ) |> 
  filter(!is.na(journal)) |> 
  write_csv(here("data", "tidy", "scopus_out_tidy.csv"))
```

```{r}
#| label: play

journal_filter <- c(
  "Discourse Processes" = "Discourse Processes",
  "Journal of Pragmatics" = "Journal of Pragmatics",
  "Psychological Science" = "Psychological Science",
  "Journal of Phonetics" = "Journal of Phonetics",
  "Journal of Experimental Linguistics" = "Journal of Experimental\nLinguistics",
  "Applied Psycholinguistics" = "Applied\nPsycholinguistics",
  "Second Language Research" = "Second Language\nResearch",
  "Studies in Second Language Acquisition" = "Studies in Second\nLanguage Acquisition",
  "Bilingualism: Language and Cognition" = "Bilingualism: Language and Cognition",
  "The Quarterly Journal of Experimental Psychology" = "The Quarterly Journal\nof Experimental Psychology",
  "Cognition" = "Cognition",
  "Journal of Memory and Language" = "Journal of Memory\nand Language",
  "Journal of Experimental Psychology" = "Journal of Experimental\nPsychology",
  "Learning, Memory, and Cognition" = "Learning, Memory,\nand Cognition",
  "Language, Cognition, and Neuroscience" = "Language, Cognition,\nand Neuroscience",
  "Behavioral and Brain Science" = "Behavioral and Brain Science",
  "Glossa" = "Glossa",
  "Glossa Psycholinguistics" = "Glossa Psycholinguistics"
)

dat <- read_csv(here("data", "tidy", "scopus_out_tidy.csv")) |> 
  filter(journal %in% names(journal_filter)) |> 
  left_join(tibble(labs = journal_filter, journal = names(journal_filter)))

n_hits <- nrow(dat)

hits_df <- function(x = 1960, y = 500, lab) {
  out <- tibble(
    x = x, 
    y = y, 
    lab = glue("Approx. {prettyNum(n_hits, big.mark = ',')} entries\n as of 03/01/2025")
  )
  
  return(out)
}


dat |> 
  group_by(year) |> 
  count() |> 
  ggplot() + 
  aes(x = year, y = n) + 
  geom_path(color = "#cc0033") +
  geom_point(size = 2, pch = 21, fill = "#cc0033", color = "white") + 
  geom_text(
    data = hits_df(y = 225), 
    aes(x = x, y = y, label = lab), 
    hjust = 0
  ) + 
  ds4ling::ds4ling_bw_theme()


dat |> 
  ggplot() + 
  aes(x = year) + 
  geom_histogram(color = "white", fill = "#cc0033", binwidth = 3) + 
  geom_text(
    data = hits_df(), 
    aes(x = x, y = y, label = lab), 
    hjust = 0
  ) + 
  scale_x_continuous(breaks = seq(1960, 2025, 5)) + 
  labs(y = "Count", x = "Year") +
  ds4ling::ds4ling_bw_theme()

dat |> 
  group_by(labs) |> 
  count() |> 
  ungroup() |> 
  mutate(labs = fct_reorder(labs, .x = n)) |> 
  ggplot() + 
  aes(y = labs, x = n) + 
  geom_segment(aes(x = 0, xend = n), linewidth = 2) + 
  geom_point(size = 4, pch = 21, fill = "#cc0033", color = "white") + 
  geom_text(
    data = hits_df(x = 1500, y = 1.25), 
    aes(x = x, y = y, label = lab), 
    hjust = 1
  ) + 
  labs(y = NULL) + 
  ds4ling::ds4ling_bw_theme()

dat |> 
  group_by(labs) |> 
  count() |> 
  ungroup() |> 
  mutate(
    prop = n / nrow(dat),  
    labs = fct_reorder(labs, .x = n)
  ) |> 
  ggplot() + 
  aes(y = labs, x = prop) + 
  geom_segment(aes(x = 0, xend = prop), linewidth = 2) + 
  geom_point(size = 4, pch = 21, fill = "#cc0033", color = "white") + 
  geom_text(
    data = hits_df(x = 0.3, y = 1.25), 
    aes(x = x, y = y, label = lab), 
    hjust = 1
  ) + 
  labs(y = NULL) + 
  ds4ling::ds4ling_bw_theme()

```

